# ────────────────────────────────────────────────────────────────
#  Build & Deploy Pointkedex backend to Azure Functions (Linux)
# ────────────────────────────────────────────────────────────────
#  • Assumes all backend code lives in   ./backend/
#    ├─ predict_server.py
#    ├─ class_indices.json
#    ├─ pokedex_resnet50.h5
#    └─ HttpPredict/
#        ├─ __init__.py
#        └─ function.json
#
#  • Publishes to production by default.  Change slot‑name if you
#    want staging (e.g. pupcloud‑pupcloud).
#
#  • Needs three repo secrets (OIDC‑based service principal) or a
#    publish‑profile secret instead of the login step.
#      AZUREAPPSERVICE_CLIENTID_…
#      AZUREAPPSERVICE_TENANTID_…
#      AZUREAPPSERVICE_SUBSCRIPTIONID_…
# ----------------------------------------------------------------

name: Build & Deploy Pointkedex API → Azure Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './backend'   # ← only backend, not static PWA
  PYTHON_VERSION: '3.12'

jobs:
# ─────────────── build ───────────────
  build:
    runs-on: ubuntu-latest
    permissions: { contents: read }

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with: { python-version: ${{ env.PYTHON_VERSION }} }

      - name: 📦 Install backend deps
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt

      # (Optional) add test step here

      - name: 📚 Zip backend for publish
        run: |
          cd backend
          zip -r ../release.zip .

      - name: 💾 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

# ─────────────── deploy ───────────────
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ⬇️ Download artifact
        uses: actions/download-artifact@v4
        with: { name: python-app }

      - name: 📂 Unzip
        run: unzip release.zip

      - name: 🔑 Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZUREAPPSERVICE_CLIENTID_CB70A3F269874835BA3BDC2E8DD09B91 }}
          tenant-id:       ${{ secrets.AZUREAPPSERVICE_TENANTID_0BCEA4CB4732493CBEEBDDCF82D43069 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8CEBB76FBDB54BA3AE0AC59A264FA309 }}

      - name: 🚀 Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name:  'Pup-Cloud'        # Function App name
          slot-name: 'Production'       # change to pupcloud-pupcloud if staging
          package:   ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
