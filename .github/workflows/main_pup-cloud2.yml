name: Build & Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  APP_NAME:   Pup-Cloud2
  ACR_NAME:   pupcloud2              # <name>.azurecr.io
  IMAGE_REPO: pup-cloud2
  TAG_NAME:   alroca                # <-- *exact* release tag
  ASSET_FILE: pokedex_resnet50.h5

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 0) Checkout code (no LFS needed – model lives in the release)
    - name: 📂 Checkout code
      uses: actions/checkout@v4

    # 1) Pull the h5 from the tagged release
    - name: 📥 Download model asset
      uses: robinraju/release-downloader@v1.9
      with:
        repository: ${{ github.repository }}
        tag:        ${{ env.TAG_NAME }}
        fileName:   ${{ env.ASSET_FILE }}
        out-file-path: ./          # places file beside Dockerfile

    # 2) Azure login (supported 'creds' input)
    - name: 🔑 Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}   # JSON produced by az ad sp create-for-rbac

    # 3) ACR login so docker push can authenticate
    - name: 🐳 Login to ACR
      run: az acr login --name ${{ env.ACR_NAME }}

    # 4) Build & push
    - name: 🏗️ Build and push container
      run: |
        TAG=${GITHUB_SHA::8}
        FULL=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:$TAG
        docker build -t "$FULL" .
        docker push "$FULL"

    # 5) Deploy
    - name: 🚀 Deploy to Web App for Containers
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.APP_NAME }}
        images:   ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ github.sha }}
