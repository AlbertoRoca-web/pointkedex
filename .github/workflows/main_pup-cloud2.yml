name: Build & Deploy Docker to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read    # to checkout your code
  id-token: write   # for OIDC (not used here, but harmless)

env:
  WEBAPP_NAME: Pup-Cloud2
  ACR_NAME:    pupcloud2    # your registry short name => pupcloud2.azurecr.io

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Pull down your code
      - name: üìÇ Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Login to Azure via service principal JSON
      - name: üîë Azure login (SPN)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3Ô∏è‚É£ Login to your ACR so Docker can push
      - name: üê≥ ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io

      # 4Ô∏è‚É£ Build & push your Docker image
      - name: üèóÔ∏è Build & push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.WEBAPP_NAME }}:$IMAGE_TAG

          docker build -t $FULL_IMAGE .
          docker push $FULL_IMAGE

      # 5Ô∏è‚É£ Tell your Web App for Containers to use the new image
      - name: üöÄ Deploy to Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images:   ${{ env.ACR_NAME }}.azurecr.io/${{ env.WEBAPP_NAME }}:${{ github.sha }}
