# .github/workflows/deploy.yml
name: Build & Deploy Docker to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ACR_NAME:    pupcloud2                  # your ACR login name
  IMAGE_REPO:  pup-cloud2                 # your ACR repo
  TAG_NAME:    alroca                     # GitHub release tag
  ASSET_FILE:  pokedex_resnet50.h5

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Get code
      - name: üìÇ Checkout repo
        uses: actions/checkout@v4

      # 2) Log in to Azure with OIDC (for CLI + az commands)
      - name: üîë Azure login (OIDC)
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}

      # 3) Build & push the image
      - name: üèóÔ∏è Build & push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:$IMAGE_TAG
          MODEL_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/${{ env.ASSET_FILE }}"
          docker build \
            --build-arg MODEL_URL="$MODEL_URL" \
            --build-arg ASSET_FILE="${{ env.ASSET_FILE }}" \
            -t "$FULL_IMAGE" .
          docker push "$FULL_IMAGE"

      # 4) Deploy using the Web App publish profile
      - name: üöÄ Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name:         pup-cloud2
          resource-group:   Pup-Cloud2_group      # EXACTLY your RG name
          publish-profile:  ${{ secrets.AZURE_PUP_CLOUD2_PUBLISH_PROFILE }}
          images:           ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ github.sha }}
