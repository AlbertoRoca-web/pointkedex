name: Build & Deploy Docker to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read    # for actions/checkout
  id-token: write   # for azure/login OIDC

env:
  WEBAPP_NAME: Pup-Cloud2
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Grab the latest code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Authenticate to Azure via OIDC
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 3) Set up Docker Buildx (optional, but recommended for multiâ€‘platform)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4) Log in to GitHub Container Registry so we can push
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5) Build & push the image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}

      # 6) Deploy that image to your Azure Web App for Containers
      - name: Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images:   ${{ env.IMAGE_NAME }}
