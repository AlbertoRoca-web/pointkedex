name: Build & Deploy Docker to Azure Web App
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  WEBAPP_NAME: pup-cloud2
  ACR_NAME:    pupcloud2
  IMAGE_REPO:  pup-cloud2
  TAG_NAME:    alroca
  ASSET_FILE:  pokedex_resnet50.h5

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üìÇ Checkout repo
        uses: actions/checkout@v4

      - name: üîë Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type:       oidc                             # OIDC avoids needing a client secret :contentReference[oaicite:5]{index=5}

      - name: Ensure Azure resources exist
        uses: azure/cli@v1
        with:
          azcliversion: 2.45.0
          inlineScript: |
            az group create --name "${{ secrets.AZURE_RESOURCE_GROUP }}" --location eastus
            az appservice plan create --name "${{ secrets.AZURE_APP_SERVICE_PLAN }}" \
                                       --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" --sku B1 --is-linux
            az webapp show --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
                           --name "${{ env.WEBAPP_NAME }}" \
            || az webapp create --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
                                --plan "${{ secrets.AZURE_APP_SERVICE_PLAN }}" \
                                --name "${{ env.WEBAPP_NAME }}" \
                                --deployment-container-image-name "${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ github.sha }}"

      - name: üê≥ ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}       # store this as a secret :contentReference[oaicite:6]{index=6}

      - name: üèóÔ∏è Build & push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:$IMAGE_TAG
          docker build --build-arg MODEL_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/${{ env.ASSET_FILE }}" \
                       --build-arg ASSET_FILE="${{ env.ASSET_FILE }}" -t "$FULL_IMAGE" .
          docker push "$FULL_IMAGE"

      - name: ‚è≥ Wait for Azure to refresh
        run: sleep 60

      - name: üöÄ Deploy to Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name:            ${{ env.WEBAPP_NAME }}
          resource-group-name: ${{ secrets.AZURE_RESOURCE_GROUP }}
          images:              ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ github.sha }}
