# .github/workflows/deploy_container.yml
# Build your Docker image, push to ACR, and update your Web App for Containers.
name: Build & Deploy Docker to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read    # for checkout
  id-token: write   # for federated Azure login

env:
  WEBAPP_NAME: Pup-Cloud2         # your Web App name
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.WEBAPP_NAME }}:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1) Get the code
    - name: Checkout repo
      uses: actions/checkout@v4

    # 2) Log in to Azure with OIDC
    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        client-id:       ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # 3) Log in to your Azure Container Registry
    - name: Log in to ACR
      run: az acr login --name ${{ secrets.ACR_NAME }}

    # 4) Build & push the Docker image
    - name: Build & push image
      run: |
        docker build --file Dockerfile \
                     --tag $IMAGE_NAME \
                     .
        docker push $IMAGE_NAME

    # 5) Point your Web App to the new image
    - name: Update Web App Container
      run: |
        az webapp config container set \
          --resource-group ${{ secrets.AZURE_RG }} \
          --name ${{ env.WEBAPP_NAME }} \
          --docker-custom-image-name $IMAGE_NAME
