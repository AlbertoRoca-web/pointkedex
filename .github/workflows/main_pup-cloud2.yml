name: Build & Deploy to Azure Web App for Containers

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  WEBAPP_NAME: pup-cloud2
  RESOURCE_GROUP: Pup-Cloud2_group
  ACR_NAME: pupcloud2
  IMAGE_REPO: pup-cloud2
  TAG_NAME: alroca
  ASSET_FILE: pokedex_resnet50.h5

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: üìÇ Checkout repo
        uses: actions/checkout@v4

      - name: üîë Azure Login via OIDC
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}   # SPN JSON stored in your repo‚Äôs secrets :contentReference[oaicite:1]{index=1}

      - name: üê≥ Log in to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}   # uses az CLI; no username/password inputs needed :contentReference[oaicite:2]{index=2}

      - name: üèóÔ∏è Build & push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${IMAGE_TAG}

          MODEL_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/${{ env.ASSET_FILE }}"

          docker build \
            --build-arg MODEL_URL="$MODEL_URL" \
            --build-arg ASSET_FILE="${{ env.ASSET_FILE }}" \
            -t "$FULL_IMAGE" .
          docker push "$FULL_IMAGE"                                      :contentReference[oaicite:3]{index=3}

      - name: üöÄ Deploy to Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name:             ${{ env.WEBAPP_NAME }}
          resource-group-name:  ${{ env.RESOURCE_GROUP }}
          images:               ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ github.sha }}  :contentReference[oaicite:4]{index=4}
