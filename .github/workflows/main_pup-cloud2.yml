name: Build & Deploy Docker to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read        # for actions/checkout
  id-token: write       # for azure/login (OIDC)

env:
  WEBAPP_NAME: pup-cloud2           # must match your Web App name (lowercase)
  RG_NAME:     Pup-Cloud2_group     # exact Resource Group name
  ACR_NAME:    pupcloud2            # ACR short name (no .azurecr.io)
  IMAGE_REPO:  pup-cloud2           # repo inside ACR
  TAG_NAME:    alroca               # GitHub release tag
  ASSET_FILE:  pokedex_resnet50.h5
  ACR_USERNAME: PupCloud2
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: üìÇ Checkout code
        uses: actions/checkout@v4

      # 2) Login to Azure via OIDC
      - name: üîë Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 3) Login to ACR
      - name: üê≥ ACR Login
        run: |
          echo "${{ env.ACR_PASSWORD }}" \
            | docker login ${{ env.ACR_NAME }}.azurecr.io \
                --username "${{ env.ACR_USERNAME }}" \
                --password-stdin

      # 4) Build & Push
      - name: üèóÔ∏è Build & Push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:$IMAGE_TAG
          MODEL_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/${{ env.ASSET_FILE }}"

          docker build \
            --build-arg MODEL_URL="$MODEL_URL" \
            --build-arg ASSET_FILE="${{ env.ASSET_FILE }}" \
            -t "$FULL_IMAGE" .
          docker push "$FULL_IMAGE"

      # 5) Give Azure time to sync its cache (prevents ‚Äúresource doesn‚Äôt exist‚Äù)
      - name: ‚è≥ Wait for resource propagation
        run: sleep 60

      # 6) Deploy container to Web App
      - name: üöÄ Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name:            ${{ env.WEBAPP_NAME }}
          resource-group-name: ${{ env.RG_NAME }}
          images:              ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ github.sha }}
          slot-name:           production
