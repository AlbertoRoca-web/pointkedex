# .github/workflows/main_pup-cloud2.yml
name: Build & Deploy Docker to Azure Web App

# Trigger on push to main or manual dispatch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read      # for actions/checkout (and LFS)
  id-token: write     # only if you ever switch back to OIDC

env:
  # Your Azure Web App name (must match exactly, case‚Äêsensitive)
  APP_NAME:   Pup-Cloud2
  # Your ACR login‚Äêserver short name (all lowercase, no ".azurecr.io")
  ACR_NAME:   pupcloud2
  # Docker repository name inside ACR (all lowercase, hyphens okay)
  IMAGE_REPO: pup-cloud2

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Fetch code + Git LFS files (so your .h5 really exists in the build context)
      - name: üìÇ Checkout code (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      # 2) Log in to Azure using a Service Principal + secret
      - name: üîë Azure login (Service Principal)
        uses: azure/login@v2
        with:
          auth-type: service_principal
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # 3) Log in to ACR so that 'docker push' can authenticate
      - name: üê≥ Login to ACR
        run: az acr login --name ${{ env.ACR_NAME }}

      # 4) Build & push your image
      - name: üèóÔ∏è Build & Push Docker Image
        run: |
          # shorten the SHA so tags stay manageable
          TAG=${GITHUB_SHA::8}
          FULL_IMAGE=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:$TAG

          docker build -t $FULL_IMAGE .
          docker push    $FULL_IMAGE

      # 5) Deploy that image to your Web App for Containers
      - name: üöÄ Deploy to Web App for Containers
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          images:   ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${GITHUB_SHA::8}
